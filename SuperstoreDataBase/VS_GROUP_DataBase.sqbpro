<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Desktop/E-Commerce/SuperstoreDataBase/VS_GROUP_DataBase.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="150"/><column_width id="3" width="2844"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainaddress"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="address" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="127"/><column index="2" value="142"/><column index="3" value="127"/><column index="4" value="92"/><column index="5" value="182"/><column index="6" value="166"/><column index="7" value="132"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="142"/><column index="2" value="220"/><column index="3" value="117"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="order_details" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="173"/><column index="2" value="155"/><column index="3" value="171"/><column index="4" value="109"/><column index="5" value="108"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="orders" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="155"/><column index="2" value="195"/><column index="3" value="195"/><column index="4" value="139"/><column index="5" value="127"/><column index="6" value="142"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="170"/><column index="2" value="300"/><column index="3" value="138"/><column index="4" value="151"/><column index="5" value="151"/><column index="6" value="157"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Question

-- 1. What is the category generating the maximum sales revenue?
SELECT Category,
       SUM((ProductPrice * (1 - Discount)) * Quantity) AS TotalSales
FROM products P
JOIN order_details OD ON P.ProductID = OD.ProductID
GROUP BY Category
ORDER BY TotalSales DESC
LIMIT 1;


-- 1(b)  What about the profit in this category?
SELECT Category,
       SUM((ProductPrice * (1 - Discount)) * Quantity) AS TotalSales,
	   SUM ((ProductPrice * (1 - Discount)) * Quantity)- SUM(SupplierPrice * Quantity) AS Profit
FROM products P
JOIN order_details OD ON P.ProductID = OD.ProductID
GROUP BY Category
ORDER BY TotalSales DESC
LIMIT 1;


-- 1(c) Are they making a loss in any categories?
SELECT Category,
       SUM((ProductPrice * (1 - Discount)) * Quantity) AS TotalSales,
	   SUM ((ProductPrice * (1 - Discount)) * Quantity)- SUM(SupplierPrice * Quantity) AS Profit
FROM products P
JOIN order_details OD ON P.ProductID = OD.ProductID
GROUP BY Category
HAVING Profit&lt;0;





-- 2 What are 5 states generating the maximum and minimum sales revenue?

-- States with maximum sales revenue
SELECT  *
FROM(
SELECT State, 
       SUM((ProductPrice * (1 - Discount)) * Quantity) AS TotalSales	   
FROM address A
JOIN orders O ON A.AddressID =O.AddressID
JOIN order_details OD ON O.OrderID = OD.OrderID
JOIN products P ON OD.ProductID = P.ProductID
GROUP BY State
ORDER BY TotalSales DESC
LIMIT 5
)
UNION -- A union to have both group of states in the same  Table
-- State with minimum sales revenue 
SELECT *
FROM (
SELECT State, 
       SUM((ProductPrice * (1 - Discount)) * Quantity) AS TotalSales	   
FROM address A
JOIN orders O ON A.AddressID =O.AddressID
JOIN order_details OD ON O.OrderID = OD.OrderID
JOIN products P ON OD.ProductID = P.ProductID
GROUP BY State
ORDER BY TotalSales ASC
LIMIT 5
);




-- 3. What are the 3 products in each product segment with the highest sales?
-- A CTE that returns a Table of ranked ProductName and Segment based on their Total sales
WITH RankedProducts AS (
    SELECT ProductName,
           Segment,
           SUM((ProductPrice * (1 - Discount)) * Quantity) AS TotalSales,
           ROW_NUMBER() OVER (PARTITION BY Segment ORDER BY SUM((ProductPrice * (1 - Discount)) * Quantity) DESC) AS Rank
    FROM products P 
    JOIN order_details OD ON P.ProductID = OD.ProductID
    JOIN orders O ON OD.OrderID = O.OrderID
    JOIN customers C ON O.CustomerID = C.CustomerID
    GROUP BY Segment, ProductName
)
SELECT ProductName, Segment, TotalSales
FROM RankedProducts
WHERE Rank &lt;= 3  -- Condition to return only the Top 3 Products with highest sales
;





-- 3(b) Are they the 3 most profitable products as well?
-- A CTE that returns a Table of ranked ProductName and Segment based on their Profit
WITH RankedProducts AS (
    SELECT ProductName,
           Segment,
           SUM ((ProductPrice * (1 - Discount)) * Quantity)- SUM(SupplierPrice * Quantity) AS Profit,
           ROW_NUMBER() OVER (PARTITION BY Segment ORDER BY SUM ((ProductPrice * (1 - Discount)) * Quantity)- SUM(SupplierPrice * Quantity) DESC) AS Rank
    FROM products P 
    JOIN order_details OD ON P.ProductID = OD.ProductID
    JOIN orders O ON OD.OrderID = O.OrderID
    JOIN customers C ON O.CustomerID = C.CustomerID
    GROUP BY Segment, ProductName
)
SELECT ProductName, Segment, Profit
FROM RankedProducts
WHERE Rank &lt;= 3 -- Condition to return only the Top 3 Products with most profit
;


-- 4. What are the 3 best-seller products in each product segment? (Quantity-wise)

-- A CTE that returns a Table of ranked ProductName,TotalSales and Segment based on their Quantity
WITH RankedProducts AS (
    SELECT ProductName,Quantity,
           Segment,
           SUM((ProductPrice * (1 - Discount)) * Quantity) AS TotalSales,
           ROW_NUMBER() OVER (PARTITION BY Segment ORDER BY Quantity DESC) AS Rank
    FROM products P 
    JOIN order_details OD ON P.ProductID = OD.ProductID
    JOIN orders O ON OD.OrderID = O.OrderID
    JOIN customers C ON O.CustomerID = C.CustomerID
    GROUP BY Segment, ProductName
)
SELECT ProductName, Segment,TotalSales, Quantity
FROM RankedProducts
WHERE Rank &lt;= 3  -- Condition to return only the Top 3 Products with highest sales based quantity
;

-- 5. What are the top 3 worst-selling products in every category? (Quantity-wise)
-- A CTE that returns a Table of ranked ProductName,TotalSales and Segment based on their Quantity
WITH RankedProducts AS (
    SELECT ProductName,Quantity,
           Segment,
           SUM((ProductPrice * (1 - Discount)) * Quantity) AS TotalSales,
           ROW_NUMBER() OVER (PARTITION BY Segment ORDER BY Quantity ASC) AS Rank
    FROM products P 
    JOIN order_details OD ON P.ProductID = OD.ProductID
    JOIN orders O ON OD.OrderID = O.OrderID
    JOIN customers C ON O.CustomerID = C.CustomerID
    GROUP BY Segment, ProductName
)
SELECT ProductName, Segment,TotalSales, Quantity
FROM RankedProducts
WHERE Rank &lt;= 3  -- Condition to return only the Top 3 Products with highest sales based quantity
;

-- 6. How many unique customers per month are there for the year 2016. (There's a catch here: contrary to other 'heavier' RDBMS, 
--SQLite does not support the functions YEAR() or MONTH() to extract the year or the month in a date. You will have to create two new columns: year and month.)

SELECT 
    strftime('%m', OrderDate) AS Month,
    strftime('%Y', OrderDate) AS Year,
    COUNT(DISTINCT CustomerID) AS UniqueCustomers
FROM 
    orders
WHERE 
    strftime('%Y', OrderDate) = '2016'
GROUP BY 
    strftime('%m', OrderDate), strftime('%Y', OrderDate)
ORDER BY 
    Year, Month;



 </sql><current_tab id="0"/></tab_sql></sqlb_project>
